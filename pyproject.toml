[project]
name = "safetywrap"
version = "1.5.0"
description = "Rust-inspired typesafe result types"
authors = [{ name = "Matthew Planchard", email = "msplanchard@gmail.com" }]
dependencies = []
readme = "README.md"
requires-python = ">=3.6"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "black",
    "coverage",
    "flake8",
    "ipdb",
    "ipython",
    "mypy",
    "pydocstyle",
    "pylint",
    "pytest",
    "pytest-cov",
    "tox",
    "twine",
    "typeguard",
    "wheel",
    "setuptools>=69.5.1",
]

[tool.rye.scripts]
pytest = [
    "pytest",
    "--cov-config=setup.cfg",
    "--cov-report=xml:.coverage.xml",
    "--cov-report=term",
    "--cov=safetywrap",
    "--doctest-modules",
    "--junit-xml=.pytest.xml",
    "src",
    "tests",
]
sync = "rye sync"
test = { chain = ["clean", "sync", "pytest"] }
fmt = "black --line-length 80 src tests"
lint = { chain = [
    "lint:black",
    "lint:pydocstyle",
    "lint:flake8",
    "lint:pylint",
    "lint:mypy",
] }
"lint:black" = "black --check --line-length 80 src tests"
"lint:pydocstyle" = "pydocstyle src tests"
"lint:flake8" = "flake8 src tests"
"lint:pylint" = "pylint --errors-only src tests"
"lint:mypy" = "mypy src tests"
all = { chain = ["fmt", "test", "lint"] }
"pin:3.8" = "rye pin 3.8"
"pin:3.9" = "rye pin 3.9"
"pin:3.10" = "rye pin 3.10"
"pin:3.11" = "rye pin 3.11"
"pin:3.12" = "rye pin 3.12"
test-all = { chain = [
    "pin:3.8",
    "test",
    "pin:3.9",
    "test",
    "pin:3.10",
    "test",
    "pin:3.11",
    "test",
    "pin:3.12",
    "test",
] }
bench = "bash -c ./bench/runner.sh"
clean-py-binaries = "find . -type f -name '*.py[co]' -delete"
clean-pycache = "find . -type d -name '__pycache__' -delete"
clean = { chain = ["clean-py-binaries", "clean-pycache"] }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/safetywrap"]
